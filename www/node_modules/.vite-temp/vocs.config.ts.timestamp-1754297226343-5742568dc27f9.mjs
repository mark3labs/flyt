// vocs.config.ts
import { defineConfig } from "file:///home/space_cowboy/Workspace/flyt/www/node_modules/vocs/_lib/index.js";
var vocs_config_default = defineConfig({
  title: "Flyt",
  description: "A minimalist workflow framework for Go with zero dependencies",
  logoUrl: "/flyt-logo.png",
  sidebar: [
    {
      text: "Introduction",
      link: "/"
    },
    {
      text: "Getting Started",
      items: [
        {
          text: "Installation",
          link: "/getting-started/installation"
        },
        {
          text: "Quick Start",
          link: "/getting-started/quick-start"
        },
        {
          text: "Project Template",
          link: "/getting-started/template"
        }
      ]
    },
    {
      text: "Core Concepts",
      items: [
        {
          text: "Nodes",
          link: "/concepts/nodes"
        },
        {
          text: "Actions",
          link: "/concepts/actions"
        },
        {
          text: "Flows",
          link: "/concepts/flows"
        },
        {
          text: "Shared Store",
          link: "/concepts/shared-store"
        }
      ]
    },
    {
      text: "Patterns",
      items: [
        {
          text: "Configuration via Closures",
          link: "/patterns/closures"
        },
        {
          text: "Error Handling & Retries",
          link: "/patterns/error-handling"
        },
        {
          text: "Fallback on Failure",
          link: "/patterns/fallback"
        },
        {
          text: "Conditional Branching",
          link: "/patterns/branching"
        }
      ]
    },
    {
      text: "Advanced",
      items: [
        {
          text: "Custom Node Types",
          link: "/advanced/custom-nodes"
        },
        {
          text: "Batch Processing",
          link: "/advanced/batch-processing"
        },
        {
          text: "Batch Flows",
          link: "/advanced/batch-flows"
        },
        {
          text: "Nested Flows",
          link: "/advanced/nested-flows"
        },
        {
          text: "Flow as Node",
          link: "/advanced/flow-as-node"
        },
        {
          text: "Worker Pool",
          link: "/advanced/worker-pool"
        },
        {
          text: "Utilities",
          link: "/advanced/utilities"
        }
      ]
    },
    {
      text: "Examples",
      items: [
        {
          text: "Agent",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/agent"
        },
        {
          text: "Chat",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/chat"
        },
        {
          text: "LLM Streaming",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/llm-streaming"
        },
        {
          text: "MCP",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/mcp"
        },
        {
          text: "Summarize",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/summarize"
        },
        {
          text: "Tracing",
          link: "https://github.com/mark3labs/flyt/tree/main/cookbook/tracing"
        }
      ]
    },
    {
      text: "Best Practices",
      link: "/best-practices"
    }
  ],
  socials: [
    {
      icon: "github",
      link: "https://github.com/mark3labs/flyt"
    }
  ]
});
export {
  vocs_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidm9jcy5jb25maWcudHMiXSwKICAic291cmNlUm9vdCI6ICIvaG9tZS9zcGFjZV9jb3dib3kvV29ya3NwYWNlL2ZseXQvd3d3LyIsCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL2hvbWUvc3BhY2VfY293Ym95L1dvcmtzcGFjZS9mbHl0L3d3d1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL2hvbWUvc3BhY2VfY293Ym95L1dvcmtzcGFjZS9mbHl0L3d3dy92b2NzLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vaG9tZS9zcGFjZV9jb3dib3kvV29ya3NwYWNlL2ZseXQvd3d3L3ZvY3MuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndm9jcydcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcbiAgdGl0bGU6ICdGbHl0JyxcbiAgZGVzY3JpcHRpb246ICdBIG1pbmltYWxpc3Qgd29ya2Zsb3cgZnJhbWV3b3JrIGZvciBHbyB3aXRoIHplcm8gZGVwZW5kZW5jaWVzJyxcbiAgbG9nb1VybDogJy9mbHl0LWxvZ28ucG5nJyxcbiAgc2lkZWJhcjogW1xuICAgIHtcbiAgICAgIHRleHQ6ICdJbnRyb2R1Y3Rpb24nLFxuICAgICAgbGluazogJy8nLFxuICAgIH0sXG4gICAge1xuICAgICAgdGV4dDogJ0dldHRpbmcgU3RhcnRlZCcsXG4gICAgICBpdGVtczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0luc3RhbGxhdGlvbicsXG4gICAgICAgICAgbGluazogJy9nZXR0aW5nLXN0YXJ0ZWQvaW5zdGFsbGF0aW9uJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdRdWljayBTdGFydCcsXG4gICAgICAgICAgbGluazogJy9nZXR0aW5nLXN0YXJ0ZWQvcXVpY2stc3RhcnQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ1Byb2plY3QgVGVtcGxhdGUnLFxuICAgICAgICAgIGxpbms6ICcvZ2V0dGluZy1zdGFydGVkL3RlbXBsYXRlJyxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICB0ZXh0OiAnQ29yZSBDb25jZXB0cycsXG4gICAgICBpdGVtczogW1xuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ05vZGVzJyxcbiAgICAgICAgICBsaW5rOiAnL2NvbmNlcHRzL25vZGVzJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdBY3Rpb25zJyxcbiAgICAgICAgICBsaW5rOiAnL2NvbmNlcHRzL2FjdGlvbnMnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0Zsb3dzJyxcbiAgICAgICAgICBsaW5rOiAnL2NvbmNlcHRzL2Zsb3dzJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdTaGFyZWQgU3RvcmUnLFxuICAgICAgICAgIGxpbms6ICcvY29uY2VwdHMvc2hhcmVkLXN0b3JlJyxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICB0ZXh0OiAnUGF0dGVybnMnLFxuICAgICAgaXRlbXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdDb25maWd1cmF0aW9uIHZpYSBDbG9zdXJlcycsXG4gICAgICAgICAgbGluazogJy9wYXR0ZXJucy9jbG9zdXJlcycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnRXJyb3IgSGFuZGxpbmcgJiBSZXRyaWVzJyxcbiAgICAgICAgICBsaW5rOiAnL3BhdHRlcm5zL2Vycm9yLWhhbmRsaW5nJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdGYWxsYmFjayBvbiBGYWlsdXJlJyxcbiAgICAgICAgICBsaW5rOiAnL3BhdHRlcm5zL2ZhbGxiYWNrJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdDb25kaXRpb25hbCBCcmFuY2hpbmcnLFxuICAgICAgICAgIGxpbms6ICcvcGF0dGVybnMvYnJhbmNoaW5nJyxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICB0ZXh0OiAnQWR2YW5jZWQnLFxuICAgICAgaXRlbXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdDdXN0b20gTm9kZSBUeXBlcycsXG4gICAgICAgICAgbGluazogJy9hZHZhbmNlZC9jdXN0b20tbm9kZXMnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0JhdGNoIFByb2Nlc3NpbmcnLFxuICAgICAgICAgIGxpbms6ICcvYWR2YW5jZWQvYmF0Y2gtcHJvY2Vzc2luZycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnQmF0Y2ggRmxvd3MnLFxuICAgICAgICAgIGxpbms6ICcvYWR2YW5jZWQvYmF0Y2gtZmxvd3MnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ05lc3RlZCBGbG93cycsXG4gICAgICAgICAgbGluazogJy9hZHZhbmNlZC9uZXN0ZWQtZmxvd3MnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0Zsb3cgYXMgTm9kZScsXG4gICAgICAgICAgbGluazogJy9hZHZhbmNlZC9mbG93LWFzLW5vZGUnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ1dvcmtlciBQb29sJyxcbiAgICAgICAgICBsaW5rOiAnL2FkdmFuY2VkL3dvcmtlci1wb29sJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdVdGlsaXRpZXMnLFxuICAgICAgICAgIGxpbms6ICcvYWR2YW5jZWQvdXRpbGl0aWVzJyxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICB0ZXh0OiAnRXhhbXBsZXMnLFxuICAgICAgaXRlbXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdBZ2VudCcsXG4gICAgICAgICAgbGluazogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tYXJrM2xhYnMvZmx5dC90cmVlL21haW4vY29va2Jvb2svYWdlbnQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0NoYXQnLFxuICAgICAgICAgIGxpbms6ICdodHRwczovL2dpdGh1Yi5jb20vbWFyazNsYWJzL2ZseXQvdHJlZS9tYWluL2Nvb2tib29rL2NoYXQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ0xMTSBTdHJlYW1pbmcnLFxuICAgICAgICAgIGxpbms6ICdodHRwczovL2dpdGh1Yi5jb20vbWFyazNsYWJzL2ZseXQvdHJlZS9tYWluL2Nvb2tib29rL2xsbS1zdHJlYW1pbmcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJ01DUCcsXG4gICAgICAgICAgbGluazogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tYXJrM2xhYnMvZmx5dC90cmVlL21haW4vY29va2Jvb2svbWNwJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICdTdW1tYXJpemUnLFxuICAgICAgICAgIGxpbms6ICdodHRwczovL2dpdGh1Yi5jb20vbWFyazNsYWJzL2ZseXQvdHJlZS9tYWluL2Nvb2tib29rL3N1bW1hcml6ZScsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnVHJhY2luZycsXG4gICAgICAgICAgbGluazogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tYXJrM2xhYnMvZmx5dC90cmVlL21haW4vY29va2Jvb2svdHJhY2luZycsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgdGV4dDogJ0Jlc3QgUHJhY3RpY2VzJyxcbiAgICAgIGxpbms6ICcvYmVzdC1wcmFjdGljZXMnLFxuICAgIH0sXG4gIF0sXG4gIHNvY2lhbHM6IFtcbiAgICB7XG4gICAgICBpY29uOiAnZ2l0aHViJyxcbiAgICAgIGxpbms6ICdodHRwczovL2dpdGh1Yi5jb20vbWFyazNsYWJzL2ZseXQnLFxuICAgIH0sXG4gIF0sXG59KSJdLAogICJtYXBwaW5ncyI6ICI7QUFBaVMsU0FBUyxvQkFBb0I7QUFFOVQsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsT0FBTztBQUFBLEVBQ1AsYUFBYTtBQUFBLEVBQ2IsU0FBUztBQUFBLEVBQ1QsU0FBUztBQUFBLElBQ1A7QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxJQUNSO0FBQUEsSUFDQTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLFFBQ0w7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsSUFDQTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLFFBQ0w7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxJQUNBO0FBQUEsTUFDRSxNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsUUFDTDtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxNQUNGO0FBQUEsSUFDRjtBQUFBLElBQ0E7QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxRQUNMO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsSUFDQTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLFFBQ0w7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxRQUNSO0FBQUEsUUFDQTtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDUjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsSUFDQTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLElBQ1I7QUFBQSxFQUNGO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDUDtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLElBQ1I7QUFBQSxFQUNGO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
