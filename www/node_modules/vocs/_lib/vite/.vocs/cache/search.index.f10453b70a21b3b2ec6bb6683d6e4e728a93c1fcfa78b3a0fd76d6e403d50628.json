"{\"value\":{\"mdx\":\"# Project Template\\n\\nThe fastest way to start a new Flyt project is using the official template.\\n\\n## Quick Setup\\n\\n```bash\\n# Clone the template\\ngit clone https://github.com/mark3labs/flyt-project-template my-flyt-project\\ncd my-flyt-project\\n\\n# Remove template git history\\nrm -rf .git\\ngit init\\n\\n# Install dependencies\\ngo mod tidy\\n\\n# Run the example\\ngo run main.go\\n```\\n\\n## What's Included\\n\\nThe template provides:\\n\\n### Project Structure\\n\\n```\\nmy-flyt-project/\\n├── main.go           # Entry point with example workflow\\n├── nodes/            # Custom node implementations\\n│   ├── fetch.go      # Example fetch node\\n│   ├── process.go    # Example processing node\\n│   └── validate.go   # Example validation node\\n├── flows/            # Reusable flow definitions\\n│   └── example.go    # Example flow composition\\n├── go.mod            # Go module file\\n└── README.md         # Project documentation\\n```\\n\\n### Example Code\\n\\nThe template includes a working example that demonstrates:\\n\\n- Creating custom nodes\\n- Building flows\\n- Using the SharedStore\\n- Error handling with retries\\n- Action-based routing\\n\\n### main.go\\n\\n```go\\npackage main\\n\\nimport (\\n    \\\"context\\\"\\n    \\\"log\\\"\\n    \\n    \\\"github.com/mark3labs/flyt\\\"\\n    \\\"myproject/flows\\\"\\n)\\n\\nfunc main() {\\n    // Create shared store with initial data\\n    shared := flyt.NewSharedStore()\\n    shared.Set(\\\"api_key\\\", \\\"your-api-key\\\")\\n    shared.Set(\\\"base_url\\\", \\\"https://api.example.com\\\")\\n    \\n    // Create and run the example flow\\n    flow := flows.CreateExampleFlow()\\n    \\n    ctx := context.Background()\\n    if err := flow.Run(ctx, shared); err != nil {\\n        log.Fatal(err)\\n    }\\n    \\n    // Get results\\n    if result, ok := shared.Get(\\\"final_result\\\"); ok {\\n        log.Printf(\\\"Success! Result: %v\\\\n\\\", result)\\n    }\\n}\\n```\\n\\n## Customizing the Template\\n\\n### Adding New Nodes\\n\\nCreate a new file in the `nodes/` directory:\\n\\n```go\\n// nodes/custom.go\\npackage nodes\\n\\nimport (\\n    \\\"context\\\"\\n    \\\"github.com/mark3labs/flyt\\\"\\n)\\n\\nfunc CreateCustomNode() flyt.Node {\\n    return flyt.NewNode(\\n        flyt.WithExecFunc(func(ctx context.Context, prepResult any) (any, error) {\\n            // Your custom logic here\\n            return \\\"custom result\\\", nil\\n        }),\\n    )\\n}\\n```\\n\\n### Creating New Flows\\n\\nAdd flows to the `flows/` directory:\\n\\n```go\\n// flows/custom.go\\npackage flows\\n\\nimport (\\n    \\\"github.com/mark3labs/flyt\\\"\\n    \\\"myproject/nodes\\\"\\n)\\n\\nfunc CreateCustomFlow() *flyt.Flow {\\n    // Create nodes\\n    startNode := nodes.CreateCustomNode()\\n    processNode := nodes.CreateProcessNode()\\n    \\n    // Build flow\\n    flow := flyt.NewFlow(startNode)\\n    flow.Connect(startNode, flyt.DefaultAction, processNode)\\n    \\n    return flow\\n}\\n```\\n\\n## Best Practices\\n\\nWhen using the template:\\n\\n1. **Organize by Feature**: Group related nodes and flows together\\n2. **Use Configuration**: Store config in SharedStore or environment variables\\n3. **Add Tests**: Create `*_test.go` files for your nodes and flows\\n4. **Document Your Nodes**: Add comments explaining what each node does\\n5. **Version Control**: Initialize git and commit regularly\\n\\n## Deployment\\n\\nThe template is ready for deployment:\\n\\n```bash\\n# Build the binary\\ngo build -o myapp\\n\\n# Run in production\\n./myapp\\n\\n# Or use Docker\\ndocker build -t myapp .\\ndocker run myapp\\n```\\n\\n## Next Steps\\n\\n- [Core Concepts](/concepts/nodes) - Understand Flyt fundamentals\\n- [Patterns](/patterns/closures) - Learn common patterns\\n- [Examples](/examples/agent) - See real-world implementations\",\"document\":[{\"href\":\"/getting-started/template#project-template\",\"html\":\"</header>\\n<p>The fastest way to start a new Flyt project is using the official template.</p>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#project-template\",\"isPage\":true,\"text\":\"\\nThe fastest way to start a new Flyt project is using the official template.\\n\",\"title\":\"Project Template\",\"titles\":[]},{\"href\":\"/getting-started/template#quick-setup\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Clone the template</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">git</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> clone</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> https://github.com/mark3labs/flyt-project-template</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> my-flyt-project</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">cd</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> my-flyt-project</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Remove template git history</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">rm</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -rf</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> .git</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">git</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> init</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Install dependencies</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">go</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> mod</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> tidy</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Run the example</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">go</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> run</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> main.go</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#quick-setup\",\"isPage\":false,\"text\":\"\\n# Clone the template\\ngit clone https://github.com/mark3labs/flyt-project-template my-flyt-project\\ncd my-flyt-project\\n \\n# Remove template git history\\nrm -rf .git\\ngit init\\n \\n# Install dependencies\\ngo mod tidy\\n \\n# Run the example\\ngo run main.go\\n\",\"title\":\"Quick Setup\",\"titles\":[\"Project Template\"]},{\"href\":\"/getting-started/template#whats-included\",\"html\":\"\\n<p>The template provides:</p>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#whats-included\",\"isPage\":false,\"text\":\"\\nThe template provides:\\n\",\"title\":\"What&#x27;s Included\",\"titles\":[\"Project Template\"]},{\"href\":\"/getting-started/template#project-structure\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">my-flyt-project/</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">├── main.go           # Entry point with example workflow</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">├── nodes/            # Custom node implementations</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">│   ├── fetch.go      # Example fetch node</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">│   ├── process.go    # Example processing node</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">│   └── validate.go   # Example validation node</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">├── flows/            # Reusable flow definitions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">│   └── example.go    # Example flow composition</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">├── go.mod            # Go module file</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">└── README.md         # Project documentation</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#project-structure\",\"isPage\":false,\"text\":\"\\nmy-flyt-project/\\n├── main.go           # Entry point with example workflow\\n├── nodes/            # Custom node implementations\\n│   ├── fetch.go      # Example fetch node\\n│   ├── process.go    # Example processing node\\n│   └── validate.go   # Example validation node\\n├── flows/            # Reusable flow definitions\\n│   └── example.go    # Example flow composition\\n├── go.mod            # Go module file\\n└── README.md         # Project documentation\\n\",\"title\":\"Project Structure\",\"titles\":[\"Project Template\",\"What&#x27;s Included\"]},{\"href\":\"/getting-started/template#example-code\",\"html\":\"\\n<p>The template includes a working example that demonstrates:</p>\\n<ul>\\n<li>Creating custom nodes</li>\\n<li>Building flows</li>\\n<li>Using the SharedStore</li>\\n<li>Error handling with retries</li>\\n<li>Action-based routing</li>\\n</ul>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#example-code\",\"isPage\":false,\"text\":\"\\nThe template includes a working example that demonstrates:\\n\\nCreating custom nodes\\nBuilding flows\\nUsing the SharedStore\\nError handling with retries\\nAction-based routing\\n\\n\",\"title\":\"Example Code\",\"titles\":[\"Project Template\",\"What&#x27;s Included\"]},{\"href\":\"/getting-started/template#maingo\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">package</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> main</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">context</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">log</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">github.com/mark3labs/flyt</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">myproject/flows</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">func</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> main</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Create shared store with initial data</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    shared </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flyt.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">NewSharedStore</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    shared.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;api_key&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;your-api-key&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    shared.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;base_url&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;https://api.example.com&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Create and run the example flow</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    flow </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flows.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">CreateExampleFlow</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    ctx </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> context.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Background</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> err </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flow.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Run</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(ctx, shared); err </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> nil</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        log.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Fatal</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(err)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Get results</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> result, ok </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> shared.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Get</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;final_result&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">); ok {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        log.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Printf</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;Success! Result: </span><span style=\\\"color:#005CC5;--shiki-dark:#F47067\\\">%v\\\\n</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, result)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#maingo\",\"isPage\":false,\"text\":\"\\npackage main\\n \\nimport (\\n    &quot;context&quot;\\n    &quot;log&quot;\\n    \\n    &quot;github.com/mark3labs/flyt&quot;\\n    &quot;myproject/flows&quot;\\n)\\n \\nfunc main() {\\n    // Create shared store with initial data\\n    shared := flyt.NewSharedStore()\\n    shared.Set(&quot;api_key&quot;, &quot;your-api-key&quot;)\\n    shared.Set(&quot;base_url&quot;, &quot;https://api.example.com&quot;)\\n    \\n    // Create and run the example flow\\n    flow := flows.CreateExampleFlow()\\n    \\n    ctx := context.Background()\\n    if err := flow.Run(ctx, shared); err != nil {\\n        log.Fatal(err)\\n    }\\n    \\n    // Get results\\n    if result, ok := shared.Get(&quot;final_result&quot;); ok {\\n        log.Printf(&quot;Success! Result: %v\\\\n&quot;, result)\\n    }\\n}\\n\",\"title\":\"main.go\",\"titles\":[\"Project Template\",\"What&#x27;s Included\"]},{\"href\":\"/getting-started/template#customizing-the-template\",\"html\":\"\\n\",\"id\":\"docs/pages/getting-started/template.mdx#customizing-the-template\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Customizing the Template\",\"titles\":[\"Project Template\"]},{\"href\":\"/getting-started/template#adding-new-nodes\",\"html\":\"\\n<p>Create a new file in the <code>nodes/</code> directory:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// nodes/custom.go</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">package</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> nodes</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">context</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">github.com/mark3labs/flyt</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">func</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> CreateCustomNode</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">flyt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">Node</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flyt.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">NewNode</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        flyt.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">WithExecFunc</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">func</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">ctx</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> context</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">Context</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">prepResult</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) (</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            // Your custom logic here</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            return</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &quot;custom result&quot;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">nil</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    )</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#adding-new-nodes\",\"isPage\":false,\"text\":\"\\nCreate a new file in the nodes/ directory:\\n// nodes/custom.go\\npackage nodes\\n \\nimport (\\n    &quot;context&quot;\\n    &quot;github.com/mark3labs/flyt&quot;\\n)\\n \\nfunc CreateCustomNode() flyt.Node {\\n    return flyt.NewNode(\\n        flyt.WithExecFunc(func(ctx context.Context, prepResult any) (any, error) {\\n            // Your custom logic here\\n            return &quot;custom result&quot;, nil\\n        }),\\n    )\\n}\\n\",\"title\":\"Adding New Nodes\",\"titles\":[\"Project Template\",\"Customizing the Template\"]},{\"href\":\"/getting-started/template#creating-new-flows\",\"html\":\"\\n<p>Add flows to the <code>flows/</code> directory:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// flows/custom.go</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">package</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> flows</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">github.com/mark3labs/flyt</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">    &quot;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">myproject/nodes</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">func</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> CreateCustomFlow</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">*</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">flyt</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">Flow</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Create nodes</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    startNode </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> nodes.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">CreateCustomNode</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    processNode </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> nodes.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">CreateProcessNode</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Build flow</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    flow </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flyt.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">NewFlow</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(startNode)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    flow.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Connect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(startNode, flyt.DefaultAction, processNode)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> flow</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#creating-new-flows\",\"isPage\":false,\"text\":\"\\nAdd flows to the flows/ directory:\\n// flows/custom.go\\npackage flows\\n \\nimport (\\n    &quot;github.com/mark3labs/flyt&quot;\\n    &quot;myproject/nodes&quot;\\n)\\n \\nfunc CreateCustomFlow() *flyt.Flow {\\n    // Create nodes\\n    startNode := nodes.CreateCustomNode()\\n    processNode := nodes.CreateProcessNode()\\n    \\n    // Build flow\\n    flow := flyt.NewFlow(startNode)\\n    flow.Connect(startNode, flyt.DefaultAction, processNode)\\n    \\n    return flow\\n}\\n\",\"title\":\"Creating New Flows\",\"titles\":[\"Project Template\",\"Customizing the Template\"]},{\"href\":\"/getting-started/template#best-practices\",\"html\":\"\\n<p>When using the template:</p>\\n<ol>\\n<li><strong>Organize by Feature</strong>: Group related nodes and flows together</li>\\n<li><strong>Use Configuration</strong>: Store config in SharedStore or environment variables</li>\\n<li><strong>Add Tests</strong>: Create <code>*_test.go</code> files for your nodes and flows</li>\\n<li><strong>Document Your Nodes</strong>: Add comments explaining what each node does</li>\\n<li><strong>Version Control</strong>: Initialize git and commit regularly</li>\\n</ol>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#best-practices\",\"isPage\":false,\"text\":\"\\nWhen using the template:\\n\\nOrganize by Feature: Group related nodes and flows together\\nUse Configuration: Store config in SharedStore or environment variables\\nAdd Tests: Create *_test.go files for your nodes and flows\\nDocument Your Nodes: Add comments explaining what each node does\\nVersion Control: Initialize git and commit regularly\\n\\n\",\"title\":\"Best Practices\",\"titles\":[\"Project Template\"]},{\"href\":\"/getting-started/template#deployment\",\"html\":\"\\n<p>The template is ready for deployment:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Build the binary</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">go</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> build</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -o</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> myapp</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Run in production</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">./myapp</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"># Or use Docker</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">docker</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> build</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> -t</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> myapp</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> .</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">docker</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> run</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> myapp</span></span></code></pre>\\n\",\"id\":\"docs/pages/getting-started/template.mdx#deployment\",\"isPage\":false,\"text\":\"\\nThe template is ready for deployment:\\n# Build the binary\\ngo build -o myapp\\n \\n# Run in production\\n./myapp\\n \\n# Or use Docker\\ndocker build -t myapp .\\ndocker run myapp\\n\",\"title\":\"Deployment\",\"titles\":[\"Project Template\"]},{\"href\":\"/getting-started/template#next-steps\",\"html\":\"\\n<ul>\\n<li><a href=\\\"/concepts/nodes\\\">Core Concepts</a> - Understand Flyt fundamentals</li>\\n<li><a href=\\\"/patterns/closures\\\">Patterns</a> - Learn common patterns</li>\\n<li><a href=\\\"/examples/agent\\\">Examples</a> - See real-world implementations</li>\\n</ul>\",\"id\":\"docs/pages/getting-started/template.mdx#next-steps\",\"isPage\":false,\"text\":\"\\n\\nCore Concepts - Understand Flyt fundamentals\\nPatterns - Learn common patterns\\nExamples - See real-world implementations\\n\",\"title\":\"Next Steps\",\"titles\":[\"Project Template\"]}]}}"
